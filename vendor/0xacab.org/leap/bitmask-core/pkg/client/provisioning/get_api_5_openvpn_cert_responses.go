// Code generated by go-swagger; DO NOT EDIT.

package provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAPI5OpenvpnCertReader is a Reader for the GetAPI5OpenvpnCert structure.
type GetAPI5OpenvpnCertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPI5OpenvpnCertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApi5OpenvpnCertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetApi5OpenvpnCertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApi5OpenvpnCertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApi5OpenvpnCertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/5/openvpn/cert] GetAPI5OpenvpnCert", response, response.Code())
	}
}

// NewGetApi5OpenvpnCertOK creates a GetApi5OpenvpnCertOK with default headers values
func NewGetApi5OpenvpnCertOK() *GetApi5OpenvpnCertOK {
	return &GetApi5OpenvpnCertOK{}
}

/*
GetApi5OpenvpnCertOK describes a response with status code 200, with default header values.

OK
*/
type GetApi5OpenvpnCertOK struct {
	Payload string
}

// IsSuccess returns true when this get api5 openvpn cert o k response has a 2xx status code
func (o *GetApi5OpenvpnCertOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get api5 openvpn cert o k response has a 3xx status code
func (o *GetApi5OpenvpnCertOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get api5 openvpn cert o k response has a 4xx status code
func (o *GetApi5OpenvpnCertOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get api5 openvpn cert o k response has a 5xx status code
func (o *GetApi5OpenvpnCertOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get api5 openvpn cert o k response a status code equal to that given
func (o *GetApi5OpenvpnCertOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get api5 openvpn cert o k response
func (o *GetApi5OpenvpnCertOK) Code() int {
	return 200
}

func (o *GetApi5OpenvpnCertOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertOK %s", 200, payload)
}

func (o *GetApi5OpenvpnCertOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertOK %s", 200, payload)
}

func (o *GetApi5OpenvpnCertOK) GetPayload() string {
	return o.Payload
}

func (o *GetApi5OpenvpnCertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApi5OpenvpnCertBadRequest creates a GetApi5OpenvpnCertBadRequest with default headers values
func NewGetApi5OpenvpnCertBadRequest() *GetApi5OpenvpnCertBadRequest {
	return &GetApi5OpenvpnCertBadRequest{}
}

/*
GetApi5OpenvpnCertBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetApi5OpenvpnCertBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this get api5 openvpn cert bad request response has a 2xx status code
func (o *GetApi5OpenvpnCertBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get api5 openvpn cert bad request response has a 3xx status code
func (o *GetApi5OpenvpnCertBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get api5 openvpn cert bad request response has a 4xx status code
func (o *GetApi5OpenvpnCertBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get api5 openvpn cert bad request response has a 5xx status code
func (o *GetApi5OpenvpnCertBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get api5 openvpn cert bad request response a status code equal to that given
func (o *GetApi5OpenvpnCertBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get api5 openvpn cert bad request response
func (o *GetApi5OpenvpnCertBadRequest) Code() int {
	return 400
}

func (o *GetApi5OpenvpnCertBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertBadRequest %s", 400, payload)
}

func (o *GetApi5OpenvpnCertBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertBadRequest %s", 400, payload)
}

func (o *GetApi5OpenvpnCertBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *GetApi5OpenvpnCertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApi5OpenvpnCertNotFound creates a GetApi5OpenvpnCertNotFound with default headers values
func NewGetApi5OpenvpnCertNotFound() *GetApi5OpenvpnCertNotFound {
	return &GetApi5OpenvpnCertNotFound{}
}

/*
GetApi5OpenvpnCertNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApi5OpenvpnCertNotFound struct {
	Payload interface{}
}

// IsSuccess returns true when this get api5 openvpn cert not found response has a 2xx status code
func (o *GetApi5OpenvpnCertNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get api5 openvpn cert not found response has a 3xx status code
func (o *GetApi5OpenvpnCertNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get api5 openvpn cert not found response has a 4xx status code
func (o *GetApi5OpenvpnCertNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get api5 openvpn cert not found response has a 5xx status code
func (o *GetApi5OpenvpnCertNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get api5 openvpn cert not found response a status code equal to that given
func (o *GetApi5OpenvpnCertNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get api5 openvpn cert not found response
func (o *GetApi5OpenvpnCertNotFound) Code() int {
	return 404
}

func (o *GetApi5OpenvpnCertNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertNotFound %s", 404, payload)
}

func (o *GetApi5OpenvpnCertNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertNotFound %s", 404, payload)
}

func (o *GetApi5OpenvpnCertNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetApi5OpenvpnCertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApi5OpenvpnCertInternalServerError creates a GetApi5OpenvpnCertInternalServerError with default headers values
func NewGetApi5OpenvpnCertInternalServerError() *GetApi5OpenvpnCertInternalServerError {
	return &GetApi5OpenvpnCertInternalServerError{}
}

/*
GetApi5OpenvpnCertInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetApi5OpenvpnCertInternalServerError struct {
	Payload interface{}
}

// IsSuccess returns true when this get api5 openvpn cert internal server error response has a 2xx status code
func (o *GetApi5OpenvpnCertInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get api5 openvpn cert internal server error response has a 3xx status code
func (o *GetApi5OpenvpnCertInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get api5 openvpn cert internal server error response has a 4xx status code
func (o *GetApi5OpenvpnCertInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get api5 openvpn cert internal server error response has a 5xx status code
func (o *GetApi5OpenvpnCertInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get api5 openvpn cert internal server error response a status code equal to that given
func (o *GetApi5OpenvpnCertInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get api5 openvpn cert internal server error response
func (o *GetApi5OpenvpnCertInternalServerError) Code() int {
	return 500
}

func (o *GetApi5OpenvpnCertInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertInternalServerError %s", 500, payload)
}

func (o *GetApi5OpenvpnCertInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/5/openvpn/cert][%d] getApi5OpenvpnCertInternalServerError %s", 500, payload)
}

func (o *GetApi5OpenvpnCertInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *GetApi5OpenvpnCertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
